// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float> result;
RWTexture2D<float> copy;

float minCenter;
float2 position;
float radius;
float secondaryRadiusOffset;
float depth;
float elevationRange;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	// Dig a crater in result texture
	int2 positionI = int2(position.x, position.y);
	float secondaryRadius = radius + secondaryRadiusOffset;
	int2 pos = positionI + id.xy - int2(secondaryRadius, secondaryRadius);
	float dist = length(pos - positionI);

	if (dist < radius)
	{
		float w = pow(dist / radius, 2);
		float diff = max(0, minCenter - depth);
		result[pos] = (copy[pos] + elevationRange) * w + diff * (1 - w);
	}
	else if (dist < secondaryRadius)
	{
		float w = pow((dist - radius) / secondaryRadiusOffset, 2);
		result[pos] = copy[pos] + elevationRange * (1 - w);
	}

}
